eureka-server: "localhost:10001"
auth-server: "http://localhost:10004"
label.upload.files: "file"
server:
    address: "127.0.0.1"
    port: 10005
spring:
    datasource:
        driver-class-name: "com.mysql.cj.jdbc.Driver"
        password: "{cipher}0ae5c357ca30192c277be0264c96a1aa4faf09bcc8c22ce55bad08b2953076a8"
        url: "jdbc:mysql://localhost:3306/resource?useUnicode=true&useSSL=false&serverTimezone=UTC&characterEncoding=utf-8"
        username: "{cipher}9e4e4ece3a480b605678c405d04424c59bbc23e35314655b63bab43cdb4ab869"
    redis:
        host: "localhost"
        lettuce:
            pool:
                max-active: 8
                max-idle: 8
                max-wait: "-1ms"
                min-idle: 0
        password: "{cipher}d9a832f195793c20f06a2a89f27be3371c044ea201d734ebade6a7d90f544b2ec0e30e1cb2df18b071b088a6c2f592a5"
        port: 6379
    servlet:
        multipart:
            max-file-size: "10MB"
            max-request-size: "10MB"
eureka:
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            defaultZone: "http://${eureka-server}/eureka/"
    instance:
        ip-address: "127.0.0.1"
        prefer-ip-address: true
rource:
    upload:
        dir:
            root:
                linux: "{cipher}be7d0a032bda5d0837c99113b79bdfc49fa8e01164d7e176df190a4bed67afc8bfdd2af46707f8b35d6d0fdc30b1966960b88f76fcdaf0751f511ade82c17297"
                windows: "{cipher}7b1fc70a848db07504cbd3a41833e541a61b6cca067906b566e88ebaa066e990"
security:
    oauth2:
        client:
            access-token-uri: "${auth-server}/oauth/token"
            client-id: '{cipher}a760e23ee96fadcdb72e95f2f2edd1c2b86f51af2244d9679258ea77c5454667'
            client-secret: '{cipher}a1a933175d017dcf64df245ca86de11ed2ec1b34153044b08d2ea508c7c0264eafa73526184dee20218d6a3195729d23'
            scope: "account_info"
            user-authorization-uri: "${auth-server}/oauth/authorize"
        jwt:
            publickey:
                local: "public.txt"
                remote: "${auth-server}/oauth/token_key"
        resource:
            token-info-uri: "${auth-server}/oauth/check_token"
management:
  endpoints:
    web:
      exposure:
        include: "*"
